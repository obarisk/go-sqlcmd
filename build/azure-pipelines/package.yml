# sqlcmd release artifacts

trigger: 
  tags:
    include:
      - v0.*

pr: none

variables:
  CLI_VERSION: '0.0.1'
  CLI_VERSION_REVISION: '1'
  Build.SourcesCliDirectory: '$(Build.SourcesDirectory)/'
  skip.upload: "true"

stages:
  - stage: Compile
    displayName: Compile sqlcmd
    jobs:
    - job: Compile_sqlcmd
      strategy:
        matrix:
          windows:
            imageName: 'windows-latest'
      pool:
        vmImage: $(imageName)
      steps:
        - template: build-common.yml

  - stage: CreatePackages
    displayName: Create packages to publish
    jobs:
    - job: Sign_and_pack
      pool:
        vmImage: 'windows-latest'
      steps:
      - task: PowerShell@2
        displayName: Set last tag to variable
        inputs:
          targetType: 'inline'
          script: |
            $VERSION_TAG = git describe --tags (git rev-list --tags --max-count=1)
            Write-Host("##vso[task.setvariable variable=VERSION_TAG]$VERSION_TAG")
            Write-Host($VERSION_TAG)

      - task: DownloadPipelineArtifact@2
        inputs:
          buildType: 'current'
          targetPath: '$(Pipeline.Workspace)'
      
      - task: EsrpCodeSigning@1
        displayName: Sign Windows binary
        inputs:
          ConnectedServiceName: 'Code Signing'
          FolderPath: '$(Pipeline.Workspace)\SqlcmdWindows_NT'
          Pattern: '*.exe'
          signConfigType: 'inlineSignParams'
          SessionTimeout: '600'
          MaxConcurrency: '5'
          MaxRetryAttempts: '5'
          inlineOperation: |
            [
              {
                "keyCode": "CP-230012",
                "operationSetCode": "SigntoolSign",
                "parameters": [
                {
                  "parameterName": "OpusName",
                  "parameterValue": "go-sqlcmd"
                },
                {
                  "parameterName": "OpusInfo",
                  "parameterValue": "https://github.com/microsoft/go-sqlcmd"
                },
                {
                  "parameterName": "PageHash",
                  "parameterValue": "/NPH"
                },
                {
                  "parameterName": "FileDigest",
                  "parameterValue": "/fd sha256"
                },
                {
                  "parameterName": "TimeStamp",
                  "parameterValue": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
                }
                ],
                "toolName": "signtool.exe",
                "toolVersion": "6.2.9304.0"
              },
              {
                "keyCode": "CP-230012",
                "operationSetCode": "SigntoolVerify",
                "parameters": [
                {
                  "parameterName": "VerifyAll",
                  "parameterValue": "/all"
                }
                    ],
                "toolName": "signtool.exe",
                "toolVersion": "6.2.9304.0"
              }
            ]
      - task: ArchiveFiles@2
        displayName: Zip Windows binary
        inputs:
          rootFolderOrFile: '$(Pipeline.Workspace)\SqlcmdWindows_NT\Sqlcmd.exe'
          includeRootFolder: false
          archiveType: 'zip'
          archiveFile: '$(Build.ArtifactStagingDirectory)/sqlcmd-$(VERSION_TAG)-windows-x64.zip'

      - task: PublishPipelineArtifact@1
        displayName: 'Publish release archives'
        inputs:
          targetPath: $(Build.ArtifactStagingDirectory)
          artifactName: SqlcmdRelease

  - stage: WindowsMSI
    jobs:
    - job: WindowsMSIDistribution
      displayName: 'Build Windows MSI distribution'
      condition: succeeded()
      pool:
        vmImage: 'vs2017-win2016'
      variables:
        wix_download_url: 'https://azdataartifacts.blob.core.windows.net/util/wix314-binaries-mirror.zip'
        MSI_OUTPUT_DIR: '$(Build.SourcesCliDirectory)/output/msi'
      steps:
      - task: DownloadPipelineArtifact@2
        inputs:
          buildType: 'current'
          targetPath: '$(Pipeline.Workspace)'
      - task: VSBuild@1
        displayName: 'Build Windows MSI distribution'
        inputs:
          solution: '$(Build.SourcesCliDirectory)\release\windows\msi\sqlcmd.wixproj'
          msbuildArchitecture: 'x86'
          msbuildArgs: '/p:Configuration=Release'
      # Temporarily disable code signing to unblock SQLCMD CLI build pipeline
      #  - task: EsrpCodeSigning@1
      #    inputs:
      #      ConnectedServiceName: 'Code Signing'
      #      FolderPath: '$(Build.SourcesDirectory)/output/msi'
      #      Pattern: '*.msi'
      #      signConfigType: 'inlineSignParams'
      #      inlineOperation: |
      #        [
      #          {
      #            "keyCode": "CP-230012",
      #            "operationSetCode": "SigntoolSign",
      #            "parameters": [
      #              {
      #                "parameterName": "OpusName",
      #                "parameterValue": "SQLCMD CLI"
      #              },
      #              {
      #                "parameterName": "OpusInfo",
      #                "parameterValue": "https://github.com/microsoft/go-sqlcmd"
      #              },
      #              {
      #                "parameterName": "PageHash",
      #                "parameterValue": "/NPH"
      #              },
      #              {
      #                "parameterName": "FileDigest",
      #                "parameterValue": "/fd sha256"
      #              },
      #              {
      #                "parameterName": "TimeStamp",
      #                "parameterValue": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
      #              }
      #            ],
      #            "toolName": "signtool.exe",
      #            "toolVersion": "6.2.9304.0"
      #          },
      #          {
      #            "keyCode": "CP-230012",
      #            "operationSetCode": "SigntoolVerify",
      #            "parameters": [
      #              {
      #                "parameterName": "VerifyAll",
      #                "parameterValue": "/all"
      #              }
      #            ],
      #            "toolName": "signtool.exe",
      #            "toolVersion": "6.2.9304.0"
      #          }
      #        ]
      #      SessionTimeout: '600'
      #      MaxConcurrency: '50'
      #      MaxRetryAttempts: '20'
      # - task: Bash@3
      #  displayName: 'Rename MSI'
      #  inputs:
      #   targetType: 'inline'
      #    script: |
      #      mv "${MSI_OUTPUT_DIR}/sqlcmd.msi" ${MSI_OUTPUT_DIR}/sqlcmd-${CLI_VERSION}.msi
      - task: CopyFiles@2
        displayName: 'Copy MSI to: $(Build.ArtifactStagingDirectory)/windows/msi'
        inputs:
          sourceFolder: $(Build.SourcesDirectory)/release/windows/msi/bin/Release
          contents: '?(*.msi|*.md)'
          TargetFolder: $(Build.ArtifactStagingDirectory)/windows/msi
      - task: publishPipelineArtifact@0
        displayName: 'Publish MSI build artifacts'
        inputs:
          TargetPath: $(Build.ArtifactStagingDirectory)/windows/msi
          ArtifactName: msi
    - job: TestWindowsMSIDistribution
      displayName: Test Windows MSI distribution
      dependsOn: WindowsMSIDistribution
      condition: succeeded()
      pool:
        vmImage: 'vs2017-win2016'
      steps:
      - task: DownloadPipelineArtifact@1
        displayName: 'Download msi artifact'
        inputs:
          TargetPath: $(Build.ArtifactStagingDirectory)/msi
          artifactName: msi
      - task: PowerShell@2
        displayName: Install and Load CLI
        inputs:
          targetType: 'filePath'
          filePath: '$(Build.SourcesDirectory)\release\windows\msi\scripts\pipeline-test.ps1'
          failOnStderr: true